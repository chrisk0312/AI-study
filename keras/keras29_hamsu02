import numpy as np
from keras.models import Sequential,load_model, Model
from keras.layers import Dense,Input, Dropout
from sklearn.model_selection import train_test_split
from sklearn.datasets import fetch_california_housing
import time

#1 데이터
datasets = fetch_california_housing()
x = np.array(datasets.data)
y = np.array(datasets.target)

x_train, x_test, y_train, y_test = train_test_split(x,y, test_size = 0.15, random_state =282)

from sklearn.preprocessing import minmax_scale, MaxAbsScaler
from sklearn.preprocessing import StandardScaler, RobustScaler

mms = RobustScaler()

mms.fit(x_train)
x_train = mms.transform(x_train)
x_test = mms.transform(x_test)

#2. 모델구성
input1 = Input(shape=(2,))
dense1 = Dense(10)(input1)
dense2 = Dense(9)(dense1)
drop1 = Dropout(0.2)(dense2)
dense3 = Dense(8, activation='relu')(drop1)
dense4 = Dense(7)(dense3)
output1 = Dense(1)(dense4)
model = Model(inputs = input1, outputs =output1)

#3. 컴파일,훈련 
model.compile(loss = 'mse', optimizer='adam', metrics='acc')
from keras.callbacks import EarlyStopping,ModelCheckpoint
es = EarlyStopping(monitor='val_loss', mode='min',patience=45, verbose=2, restore_best_weights=True)
mcp = ModelCheckpoint(monitor ='val_loss', mode= 'auto',verbose=1, save_best_only=True, filepath='c:/_data/_save/MCP/keras26_02_MCP.hdf5')



